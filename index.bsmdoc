\config{title|feiyilin}
\config{bsmdoc_conf|index.cfg}

{!exec|firstRunOnly||unescape||{%
import bsmdoc
def bsmdoc_emph(data, *args, **kwargs):
    return bsmdoc_tag(data, ['i'], **kwargs)

post = {}

def bsmdoc_post(data, *args, **kwargs):
    src = args[0]
    title = ""
    if src.endswith('.bsmdoc'):
        bdoc = bsmdoc.Bdoc(False, False)
        bdoc.bsmdoc_gen(src, output=False)

        # title
        html = bdoc.output_filename
        title = bdoc.cfg['title']
    else:
        html = src
    title = post.get('title', title)

    if title:
        title = bsmdoc_tag(title, 'a', 'href="%s"'%html)
        h = post.get('header', '==')
        title = bsmdoc_heading(title, h, *args, **kwargs)

    img = ""
    if 'image' in post:
        img = bsmdoc_tag(post.get('image', ''), 'a', 'href="%s"'%html)
        img = bsmdoc_div(img, 'image-post', 'pure-u-1', 'pure-u-lg-1-3')
    text = post['text']
    if post.get('more', False):
        text += '<p><a href="%s">More...</a></p>'%html
        if img:
            text = bsmdoc_div(text, 'text-post', 'pure-u-1', 'pure-u-lg-2-3')
        else:
            text = bsmdoc_div(text, 'text-post', 'pure-u-1', 'pure-u-lg-1')
        data = img + text

    post.clear()
    return title + bsmdoc_div(data, 'pure-g')


def bsmdoc_ptitle(data, *args, **kwargs):
    if data:
        post['title'] = data
    if args:
        post['header'] = args[0].strip()
    return ""

def bsmdoc_pimg(data, *args, **kwargs):
    post['image'] = data
    return ""
def bsmdoc_ptext(data, *args, **kwargs):
    post['text'] = data
    post['more'] = 'more' in args
    return ''

bsmdoc_include_raw = bsmdoc_include
def bsmdoc_include(data, **kwargs):
    # assume 'data' has multiple sections separated by '|', in the format of
    # PATTERN|MAX LINE| FILENAME
    d = data.strip().split('|')
    if len(d) == 1:
        # one section, return the default
        return bsmdoc_include_raw(data, **kwargs)
    elif len(d) == 3:
        import re
        # assume the last parameter is the filename
        c = bsmdoc_include_raw(d[-1], **kwargs)
        if not c:
            # invalid filename
            return c
        lines = c.split('\n')
        pattern = []
        for i, l in enumerate(lines):
            # search the PATTERN
            if re.match(d[0], l):
               pattern.append(i)
            if len(pattern) == 2:
                # return the content between the first and second instances
                if pattern[1] - pattern[0] > int(d[1]):
                    # too many lines, cut it
                    pattern[1] = pattern[0] + int(d[1])
                return '\n'.join(lines[pattern[0]+1:pattern[1]])+'\n'
        if len(pattern) == 1:
            return '\n'.join(lines[pattern[0]:])+'\n'
        return c
    return None
%}!}

{!div|pure-g||
{!div|sidebar pure-u-1 pure-u-lg-1-6||div|header||
{!div|avatar||
\image{image/avatar.png}
!}
[mailto:tq@feiyilin.com|\tag{i|fa fa-envelope fa-lg|}]
!}

{!div|content pure-u-1 pre-u-lg-5-6||
#include index_post.bsmdoc
!}
!}
